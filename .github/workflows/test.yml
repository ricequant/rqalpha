name: Test
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libffi-dev libssl-dev zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libreadline-dev libsqlite3-dev
        sudo apt-get install -y libtool automake
        # 安装 Python 开发头文件
        sudo apt-get install -y python${{ matrix.python-version }}-dev || sudo apt-get install -y python3-dev

    - name: Cache dependencies
      uses: actions/cache@v4
      id: cache
      with:
        path: |
          ~/.cache/pip
          ~/.local
          /usr/local/lib/ta-lib
        key: ${{ runner.os }}-py-${{ matrix.python-version }}-deps-${{ hashFiles('**/requirements.txt') }}

    - name: Install system dependencies
      run: |
        if [ ! -d "/usr/local/lib/ta-lib" ]; then
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzvf ta-lib-0.4.0-src.tar.gz
          cd ta-lib
          autoreconf -i
          ./configure --prefix=/usr/local
          make
          sudo make install
          cd ..
          rm -rf ta-lib ta-lib-0.4.0-src.tar.gz

          sudo mkdir -p /usr/local/lib/ta-lib
          sudo touch /usr/local/lib/ta-lib/.installed
        fi

        # 设置库路径
        export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
        echo "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "usr/local/lib" | sudo tee /etc/ld.so.conf.d/ta-lib.conf
        sudo ldconfig

    - name: Install Python dependencies
      run: |
        python -m pip install -U pip wheel
        python -m pip install "setuptools<60" --no-cache-dir
        python -m pip install "numpy<2.0.0" --no-cache-dir
        # 设置环境变量用于 TA-Lib 编译
        export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
        export TA_LIBRARY_PATH=/usr/local/lib
        export TA_INCLUDE_PATH=/usr/local/include
        export CFLAGS="-I/usr/local/include"
        export LDFLAGS="-L/usr/local/lib"
        python -m pip install TA-Lib==0.4.25 --no-cache-dir
        python -m pip install coveralls ipython==5.3.0 --no-cache-dir
        python -m pip install --prefer-binary .

    - name: Download bundle
      run: |
        rqalpha download-bundle
        ls -al $HOME/.rqalpha/bundle/

    - name: Run tests
      run: |
        # 显式使用 Python 模块调用
        python -m coverage run --source=rqalpha test.py
        ls -al $HOME/.rqalpha/

    - name: Upload coverage
      env:
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: |
        python -m coveralls --service=github

  coveralls:
    name: Finalize coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Finish coveralls processing
      run: |
        pip3 install --upgrade coveralls
        python -m coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}